name: ML Churn Prediction CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest numpy torch xgboost scikit-learn joblib flask pennylane

    - name: Run unit tests
      run: |
        python -m pytest test_app.py

  model-validation:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy pandas scikit-learn xgboost joblib torch

    - name: Validate XGBoost Model
      run: |
        python -c "
import xgboost as xgb
import numpy as np

# Load the model
try:
    model = xgb.XGBClassifier()
    model.load_model('models/xgboost_model.json')
    print('XGBoost model loaded successfully')
except Exception as e:
    print(f'Model loading failed: {e}')
    exit(1)
        "

  build-and-deploy:
    needs: [test, model-validation]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install gunicorn

    - name: Prepare deployment package
      run: |
        mkdir churn-prediction-app
        cp app.py requirements.txt ./churn-prediction-app/
        cp -r models/ ./churn-prediction-app/models/
        cp -r templates/ ./churn-prediction-app/templates/
        cp -r static/ ./churn-prediction-app/static/

    - name: Archive deployment artifact
      uses: actions/upload-artifact@v3
      with:
        name: churn-prediction-app
        path: churn-prediction-app

    # Optional: Add deployment to your preferred platform
    # Uncomment and configure based on your deployment target
    # - name: Deploy to Heroku
    #   env:
    #     HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
    #     HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
    #   if: success()
    #   run: |
    #     heroku container:login
    #     heroku container:push web -a $HEROKU_APP_NAME
    #     heroku container:release web -a $HEROKU_APP_NAME

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Run Bandit Security Scan
      run: |
        pip install bandit
        bandit -r . -f custom

  type-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        pip install mypy types-all

    - name: Run type checking
      run: |
        mypy app.py

# Optional Performance Monitoring Job
  performance-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        pip install memory_profiler
        pip install -r requirements.txt

    - name: Check memory usage
      run: |
        python -m memory_profiler app.py
